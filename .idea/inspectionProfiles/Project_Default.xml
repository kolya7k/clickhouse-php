<component name="InspectionProjectProfileManager">
  <profile version="1.0">
    <option name="myName" value="Project Default" />
    <inspection_tool class="ClangTidy" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="clangTidyChecks" value="-*,mpi-*,bugprone-*,-bugprone-switch-missing-default-case,-bugprone-signal-handler,-bugprone-narrowing-conversions,-bugprone-suspicious-realloc-usage,-bugprone-suspicious-memory-comparison,-bugprone-chained-comparison,-bugprone-casting-through-void,-bugprone-redundant-branch-condition,-bugprone-exception-escape,-bugprone-tagged-union-member-count,-bugprone-suspicious-stringview-data-usage,-bugprone-multiple-new-in-one-expression,-bugprone-unchecked-optional-access,-bugprone-shared-ptr-array-mismatch,-bugprone-implicit-widening-of-multiplication-result,-bugprone-incorrect-enable-shared-from-this,-bugprone-misleading-setter-of-reference,-bugprone-bitwise-pointer-cast,-bugprone-signed-char-misuse,-bugprone-nondeterministic-pointer-iteration-order,-bugprone-inc-dec-in-conditions,-bugprone-assignment-in-if-condition,-bugprone-incorrect-enable-if,-bugprone-unintended-char-ostream-output,-bugprone-bool-pointer-implicit-conversion,-bugprone-empty-catch,-bugprone-unhandled-exception-at-new,-bugprone-crtp-constructor-accessibility,-bugprone-optional-value-conversion,-bugprone-compare-pointer-to-member-virtual-function,-bugprone-capturing-this-in-member-variable,-bugprone-multi-level-implicit-pointer-conversion,-bugprone-unsafe-functions,-bugprone-infinite-loop,-bugprone-pointer-arithmetic-on-polymorphic-object,-bugprone-unused-local-non-trivial-variable,-bugprone-easily-swappable-parameters,-bugprone-unique-ptr-array-mismatch,-bugprone-non-zero-enum-to-bool-conversion,-bugprone-standalone-empty,-bugprone-return-const-ref-from-parameter,-bugprone-stringview-nullptr,cert-err52-cpp,cert-err60-cpp,cert-err34-c,cert-str34-c,cert-msc50-cpp,cert-msc51-cpp,cert-dcl58-cpp,cert-flp30-c,cppcoreguidelines-pro-type-member-init,cppcoreguidelines-slicing,cppcoreguidelines-interfaces-global-init,cppcoreguidelines-pro-type-static-cast-downcast,cppcoreguidelines-narrowing-conversions,google-default-arguments,google-runtime-operator,google-explicit-constructor,hicpp-multiway-paths-covered,hicpp-exception-baseclass,misc-unconventional-assign-operator,misc-misplaced-const,misc-new-delete-overloads,misc-non-copyable-objects,misc-throw-by-value-catch-by-reference,misc-uniqueptr-reset-release,modernize-*,-modernize-use-designated-initializers,-modernize-use-trailing-return-type,-modernize-avoid-c-arrays,-modernize-use-constraints,-modernize-min-max-use-initializer-list,-modernize-use-std-format,-modernize-use-std-numbers,-modernize-type-traits,-modernize-use-std-print,-modernize-use-using,-modernize-use-integer-sign-comparison,-modernize-use-default-member-init,-modernize-use-ranges,-modernize-use-auto,-modernize-use-starts-ends-with,-modernize-macro-to-enum,openmp-use-default-none,performance-*,-performance-noexcept-swap,-performance-noexcept-destructor,-performance-enum-size,-performance-no-int-to-ptr,-performance-avoid-endl,portability-simd-intrinsics,readability-avoid-const-params-in-decls,readability-redundant-smartptr-get,readability-make-member-function-const,readability-string-compare,readability-delete-null-pointer,readability-static-accessed-through-instance,readability-convert-member-functions-to-static,readability-redundant-function-ptr-dereference,readability-const-return-type,readability-misleading-indentation,readability-non-const-parameter,readability-redundant-string-cstr,readability-use-anyofallof,readability-simplify-subscript-expr,readability-uniqueptr-delete-release,readability-static-definition-in-anonymous-namespace,readability-redundant-declaration,readability-redundant-string-init,readability-redundant-control-flow,readability-misplaced-array-index,readability-inconsistent-declaration-parameter-name,readability-container-size-empty" />
    </inspection_tool>
    <inspection_tool class="CppLocalVariableMayBeConst" enabled="false" level="HINT" enabled_by_default="false" />
    <inspection_tool class="CppParameterMayBeConst" enabled="false" level="HINT" enabled_by_default="false" />
    <inspection_tool class="SpellCheckingInspection" enabled="false" level="TYPO" enabled_by_default="false">
      <option name="processCode" value="true" />
      <option name="processLiterals" value="true" />
      <option name="processComments" value="true" />
    </inspection_tool>
  </profile>
</component>